{
  "name": "Validation",
  "tagline": "Laravel persian validation",
  "body": "[![Build Status](https://travis-ci.org/anetwork/validation.svg?branch=master)](https://travis-ci.org/anetwork/validation)\r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/anetwork/validation/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/anetwork/validation/?branch=master)\r\n\r\n# Laravel Anetwork Validation\r\n\r\nLaravel Anetwork Validation provides validation for Persian alphabet, number and etc.\r\n\r\n## Requirement\r\n\r\n* Laravel 5.*\r\n* PHP 5.5 >=\r\n\r\n## License\r\n\r\nLaravel Anetwork Validation is open-sourced software licensed under the [MIT license](http://opensource.org/licenses/MIT)\r\n\r\n## Install\r\n\r\nVia Composer\r\n\r\n``` bash\r\n$ composer require Anetwork/Validation\r\n```\r\n\r\n##Config\r\n\r\nAdd the following provider to providers part of config/app.php\r\n``` php\r\nAnetwork\\Validation\\PersianValidationServiceProvider::class\r\n```\r\n\r\n## Usage\r\n\r\nYou can use it as Validator rules\r\n\r\n| Rules | Descriptions |\r\n| --- | --- |\r\n| persian_alpha | Persian alphabet |\r\n| persian_num | Persian numbers |\r\n| persian_alpha_num | Persian alphabet and numbers |\r\n| iran_mobile | Iran mobile number |\r\n| sheba_number | Iran Sheba number |\r\n| melli_code | Iran Melli code |\r\n| is_not_persian | Doesn't accept persain alphabet and number |\r\n| is_array | Check is array and array must be lesser and equal than parameter |\r\n\r\n\r\n\r\n``` php\r\nValidator::make( $request->all(), [\r\n\r\n  'name' => 'persian_alpha|unique|max:25',    // Validate Persian name, unique and max to 25 characters\r\n\r\n  'age' => 'persian_num|required',   // Validate Persian numbers and check it's required\r\n\r\n  'address' => 'persian_alpha_num|min:10',   // Validate persian alphabet & numbers at least 10 digit accepted\r\n\r\n  'mobile' => 'iran_mobile',   // Validate mobile number\r\n\r\n  'sheba_number' => 'sheba',    // Validate sheba number of bank account\r\n\r\n  'melli_code' => 'melli_code',    // Validate melli code number\r\n  \r\n  'latin_name' => 'is_not_persian' // Validate latin name doesn't contain persian alphabet or number\r\n  \r\n  'your_array' => 'is_array:2' // Validate your array variable and must be contian 2 member or lesser\r\n\r\n]);\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}